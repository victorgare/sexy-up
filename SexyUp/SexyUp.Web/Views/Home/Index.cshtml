@using X.PagedList.Mvc
@using X.PagedList.Mvc.Bootstrap4

@model SexyUp.Web.ViewModels.Home.HomeViewModel
@Html.Partial("_Logotipo")


@using (Html.BeginForm("Search", "Home", FormMethod.Get, new { id = "form-search" }))
{
    <div class="row">
        <div class="col-lg-6 m-auto">
            <div class="input-group">
                @Html.TextBoxFor(c => c.SearchTerm, new { @class = "form-control" })
                <div class="input-group-append">
                    <button class="btn btn-primary">
                        <i class="fa fa-search"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    if (Model != null && Model.SearchResult != null)
    {
        @Html.HiddenFor(c => c.Page, new { Value = Model.Page })
        @Html.HiddenFor(c => c.LastSearchTerm, new { Value = Model.LastSearchTerm })

        <main>
            <div class="container">
                <div class="row">
                    <!-- Sidebar-->
                    <div class="sidebar col-xl-3 col-lg-4 sidebar">
                        <div class="block">
                            <h6 class="text-uppercase">Categorias</h6>
                            <div class="dropdown bootstrap-select show-tick dropup">
                                @Html.ListBoxFor(c => c.CategoriesSelected, Model.CategoriesMultiSelect, new { @class = "selectpicker", multiple = true })
                            </div>
                        </div>
                        <div class="block">
                            <h6 class="text-uppercase">Preço</h6>
                            <div id="slider-snap"></div>
                            <div class="value d-flex justify-content-between">
                                <div class="min">De R$<span id="slider-snap-value-lower" class="example-val"></span></div>
                                <div class="max">Até R$<span id="slider-snap-value-upper" class="example-val"></span></div>

                                @Html.HiddenFor(c => c.MinPriceSelected, new { Value = Model.MinPriceSelected })
                                @Html.HiddenFor(c => c.MaxPriceSelected, new { Value = Model.MaxPriceSelected })
                            </div>

                            <button type="submit" class="filter-submit">filtrar</button>
                        </div>
                    </div>
                    <!-- /Sidebar end-->
                    <!-- Grid -->
                    <div class="products-grid col-xl-9 col-lg-8 sidebar-left">
                        <div class="row">
                            @foreach (var item in Model.SearchResult)
                            {
                                {
                                    var image = item.Image.FirstOrDefault(c => c.Cover);

                                    <div class="item col-xl-4 col-md-6">
                                        <div class="product is-gray">
                                            <div class="image d-flex align-items-center justify-content-center">
                                                @*<div class="ribbon ribbon-primary text-uppercase">Sale</div>*@

                                                @if (image == null)
                                                {
                                                    <img src="/Images/products-images/not_found.png" alt="Image not found" class="img-fluid img-product" />
                                                }
                                                else
                                                {
                                                    <img src="@image.ImagePath" alt="@image.Caption" class="img-fluid img-product">
                                                }

                                                <div class="hover-overlay d-flex align-items-center justify-content-center">
                                                    <div class="CTA d-flex align-items-center justify-content-center">
                                                        <a href="#" class="add-to-cart"><i class="fa fa-shopping-cart"></i></a>
                                                        <a href="@Url.Action("ProductDetail", "Home", new {id = item.Id})" class="visit-product active"><i class="icon-search"></i>View</a>
                                                        <a href="#" data-toggle="modal" data-target="#productModal" class="quick-view"><i class="fa fa-arrows-alt"></i></a>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="title">
                                                <small class="text-muted product-brand">@item.Brand</small>
                                                <a href="detail.html">
                                                    <h3 class="h6 text-uppercase no-margin-bottom product-name">@item.Name</h3>
                                                </a><span class="price text-muted product-price">R$ @item.Price</span>
                                            </div>

                                            @* product description *@
                                            <input type="hidden" value="@item.Description" class="product-description" />

                                        </div>
                                    </div>
                                }
                            }

                        </div>

                        @if (Model.SearchResult.Any())
                        {
                            <nav aria-label="page navigation example" class="d-flex justify-content-center">
                                <div class="pagination pagination-custom">
                                    @Html.PagedListPager(Model.SearchResult, page => page.ToString(), Bootstrap4PagedListRenderOptions.ClassicPlusFirstAndLast)
                                </div>
                            </nav>
                        }
                    </div>
                    <!-- / Grid End-->
                </div>
            </div>
        </main>


        @Html.Partial("_Partials/_ProductModal")
    }
}

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    @if (Model != null)
    {
        <script>
            (function () {

                $(document).on("click", ".page-link", function (e) {
                    e.preventDefault();

                    const me = $(this);
                    const hrefValue = me.attr("href");

                    $("#Page").val(hrefValue);

                    $("#form-search").submit();
                });

                const snapSlider = document.getElementById('slider-snap');

                @{
                    var minPrice = Model.MinPriceSelected ?? Model.MinPrice;
                    var maxPrice = Model.MaxPriceSelected ?? Model.MaxPrice;
                }

                noUiSlider.create(snapSlider, {
                    start: [@minPrice, @maxPrice],
                    snap: false,
                    connect: true,
                    step: 1,
                    range: {
                        'min': @Model.MinPrice,
                        'max': @Model.MaxPrice
                    }
                });
                var snapValues = [
                    document.getElementById('slider-snap-value-lower'),
                    document.getElementById('slider-snap-value-upper')
                ];

                var hiddenValuesToSearch = [
                    document.getElementById('MinPriceSelected'),
                    document.getElementById('MaxPriceSelected')
                ];

                snapSlider.noUiSlider.on('update', function (values, handle) {
                    snapValues[handle].innerHTML = values[handle];

                    hiddenValuesToSearch[handle].value = values[handle];
                });
            })();
        </script>

        <script src="~/Scripts/app/Home/ProductModal.js"></script>
    }
}